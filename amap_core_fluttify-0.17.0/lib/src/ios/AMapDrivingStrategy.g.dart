// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum AMapDrivingStrategy {
  AMapDrivingStrategyFastest /* 0 */,
  AMapDrivingStrategyMinFare /* 1 */,
  AMapDrivingStrategyShortest /* 2 */,
  AMapDrivingStrategyNoHighways /* 3 */,
  AMapDrivingStrategyAvoidCongestion /* 4 */,
  AMapDrivingStrategyAvoidHighwaysAndFare /* 5 */,
  AMapDrivingStrategyAvoidHighwaysAndCongestion /* 6 */,
  AMapDrivingStrategyAvoidFareAndCongestion /* 7 */,
  AMapDrivingStrategyAvoidHighwaysAndFareAndCongestion /* 8 */
}

extension AMapDrivingStrategyToX on AMapDrivingStrategy {
  int toValue() {
    switch (this) {
      case AMapDrivingStrategy.AMapDrivingStrategyFastest: return 0;
      case AMapDrivingStrategy.AMapDrivingStrategyMinFare: return 1;
      case AMapDrivingStrategy.AMapDrivingStrategyShortest: return 2;
      case AMapDrivingStrategy.AMapDrivingStrategyNoHighways: return 3;
      case AMapDrivingStrategy.AMapDrivingStrategyAvoidCongestion: return 4;
      case AMapDrivingStrategy.AMapDrivingStrategyAvoidHighwaysAndFare: return 5;
      case AMapDrivingStrategy.AMapDrivingStrategyAvoidHighwaysAndCongestion: return 6;
      case AMapDrivingStrategy.AMapDrivingStrategyAvoidFareAndCongestion: return 7;
      case AMapDrivingStrategy.AMapDrivingStrategyAvoidHighwaysAndFareAndCongestion: return 8;
      default: return 0;
    }
  }
}

extension AMapDrivingStrategyFromX on int {
  AMapDrivingStrategy toAMapDrivingStrategy() {
    switch (this) {
      case 0: return AMapDrivingStrategy.AMapDrivingStrategyFastest;
      case 1: return AMapDrivingStrategy.AMapDrivingStrategyMinFare;
      case 2: return AMapDrivingStrategy.AMapDrivingStrategyShortest;
      case 3: return AMapDrivingStrategy.AMapDrivingStrategyNoHighways;
      case 4: return AMapDrivingStrategy.AMapDrivingStrategyAvoidCongestion;
      case 5: return AMapDrivingStrategy.AMapDrivingStrategyAvoidHighwaysAndFare;
      case 6: return AMapDrivingStrategy.AMapDrivingStrategyAvoidHighwaysAndCongestion;
      case 7: return AMapDrivingStrategy.AMapDrivingStrategyAvoidFareAndCongestion;
      case 8: return AMapDrivingStrategy.AMapDrivingStrategyAvoidHighwaysAndFareAndCongestion;
      default: return AMapDrivingStrategy.values[this + 0];
    }
  }
}